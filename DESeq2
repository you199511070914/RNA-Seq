1.DESeq2包

dds$condition <- factor(dds$condition, levels = c("untreated","treated"))
#安装
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install("DEseq2")

#导入R包
library("DESeq2")
dds <- DESeqDataSetFromMatrix(mycounts, colData, design= ~ condition)
dds <- DESeq(dds)


options(stringsAsFactors = FALSE)
C_1 <- read.table("D:/R语言生信下游分析/cpap/C_1.count.tab",sep = "\t",col.names = c("gene_id","C_1"))
C_12 <- read.table("D:/R语言生信下游分析/cpap/C_12.count.tab",sep = "\t",col.names = c("gene_id","C_1"))
C_12 <- read.table("D:/R语言生信下游分析/cpap/C_12.count.tab",sep = "\t",col.names = c("gene_id","C_12"))
S_2 <- read.table("D:/R语言生信下游分析/cpap/S_2.count.tab",sep = "\t",col.names = c("gene_id","S_2"))
S_11 <- read.table("D:/R语言生信下游分析/cpap/S_11.count.tab",sep = "\t",col.names = c("gene_id","S_11"))
row_count <- merge(C_1,C_12,by="gene_id")
row_count <- merge(row_count,S_2,by="gene_id")
row_count <- merge(row_count,S_11,by="gene_id")
head(row_count)
row_count_filt <- row_count[-1:-5,]
head(row_count_filt)
tail(row_count_filt)
rownames(row_count_filt) <- row_count_filt[,1]
head(row_count_filt)
row_count_filt <- row_count_filt[,-c(1)]
row_count_filt <- row_count_filt[apply(row_count_filt,1,function(x) sum(x > 1) > 1),] #先判断值是否为0，得到逻辑值，再取和，判断0的个数是否小于3
head(row_count_filt)

绘制样本表达分布箱线图
exprSet <- row_count_filt[1:6,1:6]
data <- data.frame(expression=c(exprSet),sample=rep(colnames(exprSet),each=nrow(exprSet)))
p <- ggplot(data = data,aes(x=sample,y=expression,fill=sample))
p1 <- p + geom_boxplot() + theme(axis.text.x = element_text(angle = 90)) + xlab(NULL) + ylab("log2(CPM+1)")
p1
# 样本表达总体分布-小提琴图
p2 <- p + geom_violin() + theme(axis.text = element_text(size = 12),axis.text.x = element_text(angle = 90)) + xlab(NULL) + ylab("log2(CPM+1)")
p2
# 样本表达总体分布-概率密度分布图
m <- ggplot(data=data, aes(x=expression))
p3 <- m +  geom_density(aes(fill=sample, colour=sample),alpha = 0.2) + xlab("log2(CPM+1)")
p3
# 使用500个基因的表达量来做相关性图
library(corrplot)
dim(exprSet)

# 计算相关性
M <- cor(exprSet)  #M是一个对称矩阵
g <- corrplot(M,order = "AOE",addCoef.col = "white")
##可视化corrplot
corrplot(M,order = "AOE",type="upper",tl.pos = "d")
corrplot(M,add=TRUE, type="lower", method="number",order="AOE",diag=FALSE,tl.pos="n", cl.pos="n")

# 绘制样本相关性的热图
anno <- data.frame(sampleType=group_list)  ##最重要的地方就是矩阵的行名是数据框的列名
rownames(anno) <- colnames(exprSet)
anno
p <- pheatmap::pheatmap(M,display_numbers = T,annotation_col = anno,fontsize = 11,cellheight = 28,cellwidth = 28)
p
查看样本相关性并采用热图展示
expcor <- cor(row_count_filt, method = "spearman")
head(expcor)
pheatmap::pheatmap(expcor, clustering_method = "average",
                   treeheight_row = 0,treeheight_col = 0,
                   display_numbers = T)

condition <- factor(c(rep("control",2),rep("treat",2)), levels = c("control","treat"))
condition
colData <- data.frame(row.names=colnames(row_count_filt), condition)
colData
dds <- DESeqDataSetFromMatrix(countData=row_count_filt, colData=colData, design= ~ condition)
dds_filter <- dds[ rowSums(counts(dds))>1, ] #### 过滤低表达基因,将所有样本基因表达量之和小于1的基因过滤掉+*
library(DESeq2)
dds <- DESeq(dds)
resultsNames(dds)
res <- results(dds,name="condition_treat_vs_control")  #res = results(dds, contrast=c("condition", "control", "treat"))，res <- res[order(res$pvalue),]
res <- res[order(res$padj), ]

resDF = as.data.frame(res)
resDF$gene_id = rownames(resDF)
resDF = resDF[ ,c(7,1,2,3,4,5,6)]
DEG_list <- subset(resDF,padj<0.05 &abs(log2FoldChange)>1)
write.table(DEG_list,file = "DEG_list",row.names = F,sep = "\t",quote = F)
write.table(resDF,file = "DEG.tab",sep = "\t",quote = FALSE,row.names = FALSE)

#mcols(res, use.names = TRUE)
head(res)
summary(res)

res <- lfcShrink(dds, coef="condition_treat_vs_control", type="apeglm")

#所有结果先进行输出
write.csv(res,file="All_results.csv")
table(res$padj<0.05)
#提取差异基因
diff_gene_deseq2 <-subset(res, padj < 0.05 & abs(log2FoldChange) > 1)
dim(diff_gene_deseq2)

火山图
DEG <- as.data.frame(res)
DESeq2_DEG <- na.omit(DEG)
diff <- subset(DESeq2_DEG,pvalue < 0.05) #先筛选P值
up <- subset(diff,log2FoldChange > 2) #上调
down <- subset(diff,log2FoldChange < -2) #下调
DEG_data <- DESeq2_DEG
DEG_data$logP <- -log10(DEG_data$padj) # 对差异基因矫正后p-value进行log10()转换
dim(DEG_data)
DEG_data$Group <- "not-siginficant"
DEG_data$Group[which((DEG_data$padj < 0.05) & DEG_data$log2FoldChange > 2)] = "up-regulated"
DEG_data$Group[which((DEG_data$padj < 0.05) & DEG_data$log2FoldChange < -2)] = "down-regulated"
table(DEG_data$Group)
DEG_data <- DEG_data[order(DEG_data$padj),]#对差异表达基因调整后的p值进行排序
up_label <- head(DEG_data[DEG_data$Group == "up-regulated",],1)
down_label <- head(DEG_data[DEG_data$Group == "down-regulated",],1)
deg_label_gene <- data.frame(gene = c(rownames(up_label),rownames(down_label)),
                                label = c(rownames(up_label),rownames(down_label)))
DEG_data$gene <- rownames(DEG_data)
DEG_data <- merge(DEG_data,deg_label_gene,by = 'gene',all = T)
#不添加label
ggscatter(DEG_data,x = "log2FoldChange",y = "logP",
          color = "Group",
          palette = c("green","gray","red"),
          repel = T,
          ylab = "-log10(Padj)",
          size = 1) + 
  theme_base()+
  scale_y_continuous(limits = c(0,8))+
  scale_x_continuous(limits = c(-18,18))+
  geom_hline(yintercept = 1.3,linetype = "dashed")+
  geom_vline(xintercept = c(-2,2),linetype = "dashed")



head(diff_gene_deseq2)
#或
diff_gene_deseq2 <-subset(res,padj < 0.05 & (log2FoldChange > 1 | log2FoldChange < -1))
dim(diff_gene_deseq2)
head(diff_gene_deseq2)
write.csv(diff_gene_deseq2,file= "DEG_treat_vs_control.csv",row.names = F)

library(ggplot2)
MA图
plotMA(res, ylim = c(-5,5))
topGene <- rownames(res)[which.min(res$padj)]
with(res[topGene, ], {
  points(baseMean, log2FoldChange, col="dodgerblue", cex=2, lwd=2)
  text(baseMean, log2FoldChange, topGene, pos=2, col="dodgerblue")
})

火山图
perl -F',' -alne '$F[5]=~s/\r//;if(/baseMean/){print "gene\tlog2FoldChange\tpadj\tsignificant"} else{unless(/NA/){if($F[2] >=1 && $F[5]<0.05){print "$F[0]\t$F[2]\t$F[5]\tup"} \ 
elsif($F[2]<=-1 && $F[5]<0.05){print "$F[0]\t$F[2]\t$F[5]\tdown"} else{print "$F[0]\t$F[2]\t$F[5]\tno"}}}' DEG_treat_vs_control.csv >volcano.txt

data <-read.table(file="volcano.txt",header = TRUE, row.names =1,sep = "\t")
volcano <-ggplot(data = data,aes(x=log2FoldChange,y= -1*log10(padj)))+geom_point(aes(color=significant))+
scale_color_manual(values = c("red","grey","blue")) + labs(title="Volcano_Plot",x=expression((log[2](FC)), y=expression(-log[10](padj)) ))+
geom_hline(yintercept=1.3,linetype=4)+geom_vline(xintercept=c(-1,1),linetype=4)
volcano

p <- ggplot(data=data, aes(x=logFC, y=-log10(adj.P.Val),color=regulated)) + 
     geom_point(alpha=0.5, size=1.8) + theme_set(theme_set(theme_bw(base_size=20))) + 
     xlab("log2FC") + ylab("-log10(FDR)") +scale_colour_manual(values = c('blue','black','red'))
p

主成分分析图
vsd <- vst(dds,blind=FALSE)   #rld <- rlog(dds,blind=FALSE) 数据集小于30 ->rlog,数据集大于30 ->vst
pcaData <- plotPCA(vsd,intgroup=c("condition"),returnData=TRUE)
percentVar <- round(100*attr(pcaData,"percentVar"))
ggplot(pcaData,aes(PC1,PC2,color=condition))+geom_point(size=3)+
xlab(paste0("PC1:",percentVar[1],"% variance"))+
xlab(paste0("PC2:",percentVar[2],"% variance"))+
coord_fixed()
plotPCA(rld,intgroup=c("condition"))
使用limma移除批次效应
assay(vsd) <- limma::removeBatchEffect(assay(vsd), vsd$type)
pcaData <- plotPCA(vsd, intgroup=c("condition", "type"), returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(PC1, PC2, color=condition, shape = type)) +
  geom_point(size=3) +
  xlim(-12, 12) +
  ylim(-10, 10) +
  xlab(paste0("PC1: ",percentVar[1],"% variance")) +
  ylab(paste0("PC2: ",percentVar[2],"% variance")) +
  geom_text(aes(label=name),vjust=2)
ggsave("myPCABatchEffectRemoved.png")

绘制样本相关性热图
library("pheatmap")
library("RColorBrewer")
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- paste(vsd$condition, vsd$type, sep="-")
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pdf("heatmap.pdf", height = 4, width = 5)
pheatmap(sampleDistMatrix,
         clustering_distance_rows=sampleDists,
         clustering_distance_cols=sampleDists,
         col=colors)

gene聚类热图
library(genefilter)
library(pheatmap)
rld <- rlogTransformation(dds,blind = F)
#生成一个mm.DESeq2.pseudo.counts.csv矩阵
write.csv(assay(rld),file="mm.DESeq2.pseudo.counts.csv")   
#head了前20个差异较大的基因
topVarGene <- head(order(rowVars(assay(rld)),decreasing = TRUE),20) 
mat  <- assay(rld)[ topVarGene, ]
# mat <- mat - rowMeans(mat) 减去一个平均值，让数值更加集中。得到的是第二个图。
anno <- as.data.frame(colData(rld)[,c("condition","sizeFactor")])
pheatmap(mat, annotation_col = anno)

resultsNames(dds)
library(ggplot2)
制定基因作图
plotCounts(dds,gene=which.min(res$padj),intgroup="condition",returnData=TRUE)
library("pheatmap")
select<-order(rowMeans(counts(dds,normalized=TRUE)),decreasing=TRUE)[1:30]
df<-as.data.frame(colData(dds)[,c("condition","sizeFactor")])
ntd<-normTransform(dds)
pheatmap(assay(ntd)[select,],cluster_rows=FALSE,show_rownames=T,cluster_cols=FALSE,annotation_col=df,)



2.salmon包
rm(list = ls())
options(stringsAsFactors = F)
library(clusterProfiler)
dir <- "D:/我的文件/Documents/salmon"
list.files(dir)
sample <- paste0("SRR3418",c(105,119,106,120),"_trimmed_quant")
files <- file.path(dir,sample,"quant.sf")
#names(files) <- paste0("sample",c(1:4))
names(files) <- c("SRR3418105","SRR3418119","SRR3418106","SRR3418120")
all(file.exists(files))
library(AnnotationHub)
ah <- AnnotationHub()
ath <- query(ah,"Arabidopsis thaliana")
head(ath)
ath_tx <- ath[["AH52247"]]
#ath_tx <- ath[['AH79569']]
columns(ath_tx)
k <- keys(ath_tx,keytype = "GENEID")
df <- select(ath_tx,keys = k,keytype = "GENEID",columns = "TXNAME")
tx2gene <- df[,2:1]
library("tximport")
library("readr")
txi <- tximport(files,type = "salmon",tx2gene = tx2gene)
library("DESeq2")
#sampleTable <- data.frame(condition=factor(rep(c("exp","ctrl"),each=2),c("ctrl","exp")))
sampleTable <- data.frame(condition=factor(c("ctrl","ctrl","exp","exp"),levels=c("ctrl","exp")))
sampleTable
rownames(sampleTable) <- colnames(txi$counts)
dds <- DESeqDataSetFromTximport(txi,sampleTable,~condition)
library(ggplot2)
vsd <- vst(dds,blind = FALSE)  #rld <- rlog(dds, blind=FALSE)
dds <- DESeq(dds)
resultsNames(dds)
res <- results(dds)
plotMA(res,ylim=c(-2,2))
res <- res[order(res$pvalue),]
summary(res)
mcols(res,use.names=TRUE)
#plot(res$log2FoldChange,res$pvalue)
logFC <- res$log2FoldChange
FDR <- res$padj
plot(logFC, -1*log10(FDR), col=ifelse(FDR<=0.01, "red", "black"),xlab="logFC", ylab="-1*log1o(FDR)",
     main="Volcano plot", pch=".")
plotPCA(vsd,intgroup=c("condition"))
library("pheatmap")
pheatmap(assay(vsd)[1:300,1:4])
rloos <- assay(vsd)
pearson_cor <- as.matrix(cor(rloos, method="pearson"))
heatmap(pearson_cor,margins = c(11,11),display_numbers=T,symm = T)
plotPCA(vsd, intgroup=c("condition"))
