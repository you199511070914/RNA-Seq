control1 <- read.table("D:/R语言生信下游分析/ensembl_cpap/c_1_sorted.txt",sep = "\t",header=TRUE)
control2 <- read.table("D:/R语言生信下游分析/ensembl_cpap/c_12_sorted.txt",sep = "\t",header=TRUE)
treat1 <- read.table("D:/R语言生信下游分析/ensembl_cpap/s_11_sorted.txt",sep = "\t",header=TRUE)
treat2 <- read.table("D:/R语言生信下游分析/ensembl_cpap/s_2_sorted.txt",sep = "\t",header=TRUE)
colnames(control2)[7] <- ("control2")
colnames(control1)[7] <- ("control1")
colnames(treat1)[7] <- ("treat1")
colnames(treat2)[7] <- ("treat2")
control1 <- control1[,-(2:6)]
control2 <- control2[,-(2:6)]
treat2 <- treat2[,-(2:6)]
treat1 <- treat1[,-(2:6)]
raw_count <- merge(merge(control1,control2,by="Geneid"),merge(treat1,treat2,by="Geneid"))
write.csv(raw_count,"D:/R语言生信下游分析/ensembl_cpap/raw_count.csv",row.names = FALSE)
head(raw_count)
names(raw_count)
samplenames <- c("c_1","c_12","s_11","s_2")
names(raw_count)[2:5] <- samplenames
names(raw_count)[2:5]
countData <- as.matrix(raw_count[2:5])
rownames(countData) <- raw_count$Geneid
database <- data.frame(name=samplenames,condition=c("control","control","treat","treat"))
rownames(database) <- samplenames
head(database)
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData,colData = database,design = ~ database$condition)
dds <- dds[rowSums(counts(dds))>1,]
dds <- DESeq(dds)

res <- results(dds)
write.csv(res, "D:/R语言生信下游分析/ensembl_cpap/res_des_output.csv")
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),by="row.names",sort=FALSE)
write.csv(resdata, "D:/R语言生信下游分析/ensembl_cpap/all_des_output.csv", row.names=FALSE)

一、MA图 MA图是拿来展示数据表达是否异常，现在一般都不用了。
plotMA(res, main="DESeq2", ylim=c(-2, 2))

二、火山图 可以非常直观且合理地筛选出在两样本间发生差异表达的基因。
library(ggplot2)
# 这里的resdata也可以用res_des_output.csv这个结果重新导入哦。
# 现在就是用的前面做DESeq的时候的resdata。
resdata$change <- as.factor(
	ifelse(
		resdata$padj<0.01 & abs(resdata$log2FoldChange)>1,
		ifelse(resdata$log2FoldChange>1, "Up", "Down"),
		"NoDiff"
	)
)
valcano <- ggplot(data=resdata, aes(x=log2FoldChange, y=-log10(padj), color=change)) + 
	geom_point(alpha=0.8, size=1) + 
	theme_bw(base_size=15) + 
	theme(
		panel.grid.minor=element_blank(),
		panel.grid.major=element_blank()
	) + 
	ggtitle("DESeq2 Valcano") + 
	scale_color_manual(name="", values=c("red", "green", "black"), limits=c("Up", "Down", "NoDiff")) + 
	geom_vline(xintercept=c(-1, 1), lty=2, col="gray", lwd=0.5) + 
	geom_hline(yintercept=-log10(0.01), lty=2, col="gray", lwd=0.5)

valcano

三、PCA图 就是主成分分析。是把数据降维之后进行分析。PC1和PC2分别是贡献率第一的主成分和贡献率第二的主成分。
rld <- rlog(dds)
pcaData <- plotPCA(rld, intgroup=c("condition", "name"), returnData=T)
percentVar <- round(100*attr(pcaData, "percentVar"))
pca <- ggplot(pcaData, aes(PC1, PC2, color=condition, shape=name)) + 
	geom_point(size=3) + 
	ggtitle("DESeq2 PCA") + 
	xlab(paste0("PC1: ", percentVar[1], "% variance")) + 
	ylab(paste0("PC2: ", percentVar[2], "% variance"))
pca

四、热图 heatmap 实现这基因表达模式可视化的需求。 从这里可以看到这6个样本的表达差异。
library(pheatmap)

select <- order(rowMeans(counts(dds, normalized=T)), decreasing=T)[1:1000]
nt <- normTransform(dds)
log2.norm.counts <- assay(nt)[select,]
df <- as.data.frame(colData(dds)[, c("name", "condition")])
pheatmap(log2.norm.counts, cluster_rows=T, show_rownames=F, cluster_cols=T, annotation_col=df, fontsize=6)
